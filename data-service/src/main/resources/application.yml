# Configuración principal del microservicio data-service
# Autor: Agustin Benavidez - Legajo: 62344

spring:
  application:
    name: data-service
  profiles:
    active: dev
  
  # Configuración JPA común
  jpa:
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

# Configuración del servidor
server:
  port: 8081
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

# Configuración de logging
logging:
  level:
    com.microservices.dataservice: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Configuración de Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Información de la aplicación
info:
  app:
    name: Data Service
    description: Microservicio de datos para gestión de productos
    version: 1.0.0
    author: Agustin Benavidez
    legajo: 62344

---
# Profile de desarrollo con H2
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:h2:mem:dataservicedb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
        
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    defer-datasource-initialization: true
    
  sql:
    init:
      mode: always
      data-locations: classpath:data-dev.sql

server:
  port: 8081

logging:
  level:
    root: INFO
    com.microservices.dataservice: DEBUG

---
# Profile de producción con MySQL
spring:
  config:
    activate:
      on-profile: mysql
      
  datasource:
    url: jdbc:mysql://localhost:3306/microservices_db?useSSL=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: microservices_user
    password: microservices_pass
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 600000
      connection-timeout: 30000
      
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        
server:
  port: 8081

logging:
  level:
    root: WARN
    com.microservices.dataservice: INFO
    org.hibernate.SQL: INFO

---
# Profile de producción con PostgreSQL
spring:
  config:
    activate:
      on-profile: postgres
      
  datasource:
    url: jdbc:postgresql://localhost:5432/microservices_db
    driver-class-name: org.postgresql.Driver
    username: microservices_user
    password: microservices_pass
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 600000
      connection-timeout: 30000
      
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        
server:
  port: 8081

logging:
  level:
    root: WARN
    com.microservices.dataservice: INFO
    org.hibernate.SQL: INFO

---
# Profile para testing
spring:
  config:
    activate:
      on-profile: test
      
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    
  sql:
    init:
      mode: never

logging:
  level:
    root: WARN
    com.microservices.dataservice: ERROR
